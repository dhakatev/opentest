package org.getopentest.appium;

import org.getopentest.appium.core.AppiumTestAction;
import io.appium.java_client.MobileElement;
import org.openqa.selenium.By;

public class SendKeys extends AppiumTestAction {

    @Override
    public void run() {
        super.run();

        By locator = this.readLocatorArgument("locator", null);
        String text = this.readStringArgument("text");
        Boolean clearContent = this.readBooleanArgument("clearContent", this.readBooleanArgument("clear", Boolean.FALSE));
        Boolean hideKeyboard = this.readBooleanArgument("hideKeyboard", true);
        String swipeDirection = this.readStringArgument("swipe", "none");
        Boolean useKeyboardService = this.readBooleanArgument("useKeyboardService", Boolean.FALSE);

        try {
            MobileElement element = null;

            if (locator != null) {
                this.swipeAndCheckElementVisible(locator, swipeDirection);
                element = getElement(locator);
            }

            if (clearContent && element != null) {
                element.clear();
            }

            if (useKeyboardService) {
                if (element != null) {
                    element.click();
                }
                driver.getKeyboard().sendKeys(text);
            } else {
                if (element != null) {
                    element.sendKeys(text);
                } else {
                    throw new RuntimeException(
                            "Can't perform action. You must either specify the locator of the element to send "
                            + "the keys to, or set the \"useKeyboardService\" argument's value to true.");
                }
            }

            if (hideKeyboard) {
                this.hideKeyboard();
            }
        } catch (Exception ex) {
            if (locator != null) {
                throw new RuntimeException(String.format(
                        "Failed sending keys \"%s\" to element %s",
                        text,
                        locator.toString()), ex);
            } else {
                throw new RuntimeException(String.format(
                        "Failed sending keys \"%s\"",
                        text), ex);
            }
        }
    }
}
