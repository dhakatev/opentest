package org.getopentest.selenium;

import org.getopentest.selenium.core.SeleniumTestAction;
import org.getopentest.logging.Logger;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class AssertPageTitle extends SeleniumTestAction {

    @Override
    public void run() {

        super.run();

        String titleIs = this.readStringArgument("title", this.readStringArgument("titleIs", null));
        String titleContains = this.readStringArgument("titleContains", null);

        WebDriverWait wait = new WebDriverWait(this.driver, this.explicitWaitSec);
        
        if (titleIs != null) {
            try {
                wait.until(ExpectedConditions.titleIs(titleIs));
            } catch (Exception ex) {
                throw new RuntimeException(String.format(
                        "Failed to validate page title. We expected the title to be \"%s\"",
                        titleIs));
            }
        } else if (titleContains != null) {
            try {
                wait.until(ExpectedConditions.titleContains(titleContains));
                Logger.trace(String.format("The current page title was \"%s\"",
                        driver.getTitle()));
            } catch (Exception ex) {
                throw new RuntimeException(String.format(
                        "Failed to validate page title. We expected the title to contain \"%s\"",
                        titleContains), ex);
            }
        } else {
            throw new RuntimeException(
                    "You must either provide the \"titleIs\" argument or the \"titleContains\" "
                    + "argument to indicate the type of validation to perform on the page title.");
        }
    }
}