package org.getopentest.selenium;

import org.getopentest.selenium.core.SeleniumTestAction;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class HandleModal extends SeleniumTestAction {

    @Override
    public void run() {

        super.run();

        String perform = this.readStringArgument("perform");

        this.waitForAsyncCallsToFinish();

        WebDriverWait wait = new WebDriverWait(this.driver, this.explicitWaitSec);
        wait.until(ExpectedConditions.alertIsPresent());
        
        Alert alert = driver.switchTo().alert();
        
        String text;

        switch (perform.toLowerCase()) {
            case "accept":
                alert.accept();
                break;
            case "dismiss":
                alert.dismiss();
                break;
            case "gettext":
                text = alert.getText();
                this.writeOutput("text", text);
                break;
            case "sendkeys":
                text = this.readStringArgument("text", null);
                String key = this.readStringArgument("key", null);

                if (text != null) {
                    alert.sendKeys(text);
                } else if (key != null) {
                    String keyString = Keys.valueOf(key.toUpperCase()).toString();
                    alert.sendKeys(keyString);
                } else {
                    throw new RuntimeException("Neither the \"text\" argument, nor the \"key\" argument were provided.");
                }

                break;
            default:
                throw new RuntimeException(
                        "The \"perform\" argument must have one of the following values: accept, "
                        + "authenticate, dismiss, getText, sendKeys, setCredentials.");
        }
    }
}
